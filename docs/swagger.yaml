definitions:
  model.CreateEmployeeInput:
    properties:
      hire_date:
        type: string
      person_id:
        type: integer
      salary:
        type: number
      title:
        type: string
    type: object
  model.CreateFacultyInput:
    properties:
      full_name:
        type: string
    type: object
  model.CreateGroupInput:
    properties:
      educational_level:
        type: string
      full_name:
        type: string
      specialty_id:
        type: string
      start_year:
        type: string
    type: object
  model.CreateLessonInput:
    properties:
      group_id:
        type: string
      lecture_room:
        type: string
      lesson_type:
        type: string
      subject_id:
        type: integer
      teacher_id:
        type: integer
      time_end:
        type: string
      time_start:
        type: string
    type: object
  model.CreatePersonInput:
    properties:
      birth_date:
        type: string
      name:
        type: string
      phone:
        type: string
      surname:
        type: string
      user_id:
        type: integer
    type: object
  model.CreateSpecialtyInput:
    properties:
      faculty_id:
        type: string
      full_name:
        type: string
    type: object
  model.CreateStudentInput:
    properties:
      group_id:
        type: integer
      person_id:
        type: integer
    type: object
  model.CreateSubjectInput:
    properties:
      name:
        type: string
      specialty_id:
        type: integer
    type: object
  model.CreateTeacherInput:
    properties:
      employee_id:
        type: integer
    type: object
  model.Employee:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      employee_id:
        type: integer
      hire_date:
        type: string
      last_visit_at:
        type: string
      name:
        type: string
      notes:
        type: string
      password:
        type: string
      person_id:
        type: integer
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      registered_at:
        type: string
      salary:
        type: number
      surname:
        type: string
      title:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.Faculty:
    properties:
      faculty_id:
        type: string
      full_name:
        type: string
    type: object
  model.Group:
    properties:
      educational_level:
        type: string
      end_year:
        type: string
      faculty_id:
        type: string
      full_name:
        type: string
      group_id:
        type: string
      specialty_id:
        type: integer
      start_year:
        type: string
    type: object
  model.Lesson:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      employee_id:
        type: integer
      faculty_id:
        type: string
      full_name:
        type: string
      group_id:
        type: string
      hire_date:
        type: string
      last_visit_at:
        type: string
      lecture_room:
        type: string
      lesson_id:
        type: integer
      lesson_type:
        type: string
      name:
        type: string
      notes:
        type: string
      password:
        type: string
      person_id:
        type: integer
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      registered_at:
        type: string
      salary:
        type: number
      specialty_id:
        type: integer
      subject_id:
        type: integer
      surname:
        type: string
      teacher_id:
        type: integer
      time_end:
        type: string
      time_start:
        type: string
      title:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.Person:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      last_visit_at:
        type: string
      name:
        type: string
      notes:
        type: string
      password:
        type: string
      person_id:
        type: integer
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      registered_at:
        type: string
      surname:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.Specialty:
    properties:
      faculty_id:
        type: string
      full_name:
        type: string
      specialty_id:
        type: integer
    type: object
  model.Student:
    properties:
      address:
        type: string
      birth_date:
        type: string
      educational_level:
        type: string
      email:
        type: string
      end_year:
        type: string
      faculty_id:
        type: string
      full_name:
        type: string
      group_id:
        type: string
      last_visit_at:
        type: string
      name:
        type: string
      notes:
        type: string
      password:
        type: string
      person_id:
        type: integer
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      registered_at:
        type: string
      specialty_id:
        type: integer
      start_year:
        type: string
      student_id:
        type: integer
      surname:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.Subject:
    properties:
      faculty_id:
        type: string
      full_name:
        type: string
      name:
        type: string
      specialty_id:
        type: integer
      subject_id:
        type: integer
    type: object
  model.Teacher:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      employee_id:
        type: integer
      hire_date:
        type: string
      last_visit_at:
        type: string
      name:
        type: string
      notes:
        type: string
      password:
        type: string
      person_id:
        type: integer
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      registered_at:
        type: string
      salary:
        type: number
      surname:
        type: string
      teacher_id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  model.UpdateEmployeeInput:
    properties:
      hire_date:
        type: string
      salary:
        type: number
      title:
        type: string
    type: object
  model.UpdatePersonInput:
    properties:
      address:
        type: string
      birth_date:
        type: string
      name:
        type: string
      notes:
        type: string
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      surname:
        type: string
    type: object
  model.UpdateSpecialtyInput:
    properties:
      faculty_id:
        type: string
      full_name:
        type: string
    type: object
  model.UpdateStudentInput:
    properties:
      group_id:
        type: integer
    type: object
  model.UpdateSubjectInput:
    properties:
      name:
        type: string
      specialty_id:
        type: integer
    type: object
  model.UpdateTeacherInput:
    properties:
      employee_id:
        type: integer
    type: object
  model.UserSignInInput:
    properties:
      login:
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  model.UserSignUpInput:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 70
        minLength: 5
        type: string
    required:
    - email
    - password
    - username
    type: object
  service.Tokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for test.
  title: University System API
  version: "2.0"
paths:
  /admin/hub/employees:
    get:
      consumes:
      - application/json
      description: get employees
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Employee'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get employees
      tags:
      - admin-employees
    post:
      consumes:
      - application/json
      description: create employee
      parameters:
      - description: Data for creating employee
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/model.CreateEmployeeInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create employee
      tags:
      - admin-employees
  /admin/hub/employees/{id}:
    delete:
      consumes:
      - application/json
      description: delete employee
      parameters:
      - description: ID for deleting employee
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete employee
      tags:
      - admin-employees
    get:
      consumes:
      - application/json
      description: get employee by id
      parameters:
      - description: ID for getting employee
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Employee'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get employee
      tags:
      - admin-employees
    patch:
      consumes:
      - application/json
      description: update employee
      parameters:
      - description: ID for updating employee
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateEmployeeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update employee
      tags:
      - admin-employees
  /admin/hub/faculties:
    get:
      consumes:
      - application/json
      description: get faculties
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Faculty'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get faculties
      tags:
      - admin-faculties
    post:
      consumes:
      - application/json
      description: create faculty
      parameters:
      - description: Data for creating faculty
        in: body
        name: faculty
        required: true
        schema:
          $ref: '#/definitions/model.CreateFacultyInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create faculty
      tags:
      - admin-faculties
  /admin/hub/faculties/{id}:
    delete:
      consumes:
      - application/json
      description: delete faculty
      parameters:
      - description: ID for deleting faculty
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete faculty
      tags:
      - admin-faculties
    get:
      consumes:
      - application/json
      description: get faculty by id
      parameters:
      - description: ID for getting faculty
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Faculty'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get faculty
      tags:
      - admin-faculties
  /admin/hub/groups:
    get:
      consumes:
      - application/json
      description: get groups
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Group'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get groups
      tags:
      - admin-groups
    post:
      consumes:
      - application/json
      description: create group
      parameters:
      - description: Data for creating group
        in: body
        name: faculty
        required: true
        schema:
          $ref: '#/definitions/model.CreateGroupInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create group
      tags:
      - admin-groups
  /admin/hub/groups/{id}:
    delete:
      consumes:
      - application/json
      description: delete group
      parameters:
      - description: ID for deleting group
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete group
      tags:
      - admin-groups
    get:
      consumes:
      - application/json
      description: get group by id
      parameters:
      - description: ID for getting group
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Faculty'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get group
      tags:
      - admin-groups
  /admin/hub/lessons:
    get:
      consumes:
      - application/json
      description: get lessons
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Lesson'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get lessons
      tags:
      - admin-lessons
    post:
      consumes:
      - application/json
      description: create lesson
      parameters:
      - description: Data for creating lesson
        in: body
        name: lesson
        required: true
        schema:
          $ref: '#/definitions/model.CreateLessonInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create lesson
      tags:
      - admin-lessons
  /admin/hub/lessons/{id}:
    delete:
      consumes:
      - application/json
      description: delete lesson
      parameters:
      - description: ID for deleting lesson
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete lesson
      tags:
      - admin-lessons
    get:
      consumes:
      - application/json
      description: get lesson by id
      parameters:
      - description: ID for getting lesson
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Lesson'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get lesson
      tags:
      - admin-lessons
  /admin/hub/people:
    get:
      consumes:
      - application/json
      description: get people
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Person'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get people
      tags:
      - admin-people
    post:
      consumes:
      - application/json
      description: create person
      parameters:
      - description: Data for creating person
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.CreatePersonInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create person
      tags:
      - admin-people
  /admin/hub/people/{id}:
    delete:
      consumes:
      - application/json
      description: delete person
      parameters:
      - description: ID for deleting person
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete person
      tags:
      - admin-people
    get:
      consumes:
      - application/json
      description: get person by id
      parameters:
      - description: ID for getting person
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get person
      tags:
      - admin-people
    patch:
      consumes:
      - application/json
      description: update person
      parameters:
      - description: ID for updating person
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePersonInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update person
      tags:
      - admin-people
  /admin/hub/specialties:
    get:
      consumes:
      - application/json
      description: get specialties
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Specialty'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get specialties
      tags:
      - admin-specialties
    post:
      consumes:
      - application/json
      description: create specialty
      parameters:
      - description: Data for creating specialty
        in: body
        name: specialty
        required: true
        schema:
          $ref: '#/definitions/model.CreateSpecialtyInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create specialty
      tags:
      - admin-specialties
  /admin/hub/specialties/{id}:
    delete:
      consumes:
      - application/json
      description: delete specialty
      parameters:
      - description: ID for deleting specialties
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete specialty
      tags:
      - admin-specialties
    get:
      consumes:
      - application/json
      description: get specialty by id
      parameters:
      - description: ID for getting specialty
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Specialty'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get specialty
      tags:
      - admin-specialties
    patch:
      consumes:
      - application/json
      description: update specialty
      parameters:
      - description: ID for updating specialty
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSpecialtyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update specialty
      tags:
      - admin-specialties
  /admin/hub/students:
    get:
      consumes:
      - application/json
      description: get students
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Student'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get students
      tags:
      - admin-students
    post:
      consumes:
      - application/json
      description: create student
      parameters:
      - description: Data for creating student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/model.CreateStudentInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create student
      tags:
      - admin-students
  /admin/hub/students/{id}:
    delete:
      consumes:
      - application/json
      description: delete student
      parameters:
      - description: ID for deleting student
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete student
      tags:
      - admin-students
    get:
      consumes:
      - application/json
      description: get student by id
      parameters:
      - description: ID for getting student
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get student
      tags:
      - admin-students
    patch:
      consumes:
      - application/json
      description: update student
      parameters:
      - description: ID for updating student
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateStudentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update student
      tags:
      - admin-students
  /admin/hub/subjects:
    get:
      consumes:
      - application/json
      description: get subjects
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Subject'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get subjects
      tags:
      - admin-subjects
    post:
      consumes:
      - application/json
      description: create subject
      parameters:
      - description: Data for creating subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/model.CreateSubjectInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create subject
      tags:
      - admin-subjects
  /admin/hub/subjects/{id}:
    delete:
      consumes:
      - application/json
      description: delete subject
      parameters:
      - description: ID for deleting subject
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete subject
      tags:
      - admin-subjects
    get:
      consumes:
      - application/json
      description: get subject by id
      parameters:
      - description: ID for getting subject
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Subject'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get subject
      tags:
      - admin-subjects
    patch:
      consumes:
      - application/json
      description: update subject
      parameters:
      - description: ID for updating subject
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSubjectInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update subject
      tags:
      - admin-subjects
  /admin/hub/teachers:
    get:
      consumes:
      - application/json
      description: get teachers
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Teacher'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get teachers
      tags:
      - admin-teachers
    post:
      consumes:
      - application/json
      description: create teacher
      parameters:
      - description: Data for creating teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/model.CreateTeacherInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create teacher
      tags:
      - admin-teachers
  /admin/hub/teachers/{id}:
    delete:
      consumes:
      - application/json
      description: delete teacher
      parameters:
      - description: ID for deleting teacher
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete teacher
      tags:
      - admin-teachers
    get:
      consumes:
      - application/json
      description: get teacher by id
      parameters:
      - description: ID for getting teacher
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Teacher'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get teacher
      tags:
      - admin-teachers
    patch:
      consumes:
      - application/json
      description: update teacher
      parameters:
      - description: ID for updating teacher
        in: path
        name: id
        required: true
        type: integer
      - description: New information for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateTeacherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update teacher
      tags:
      - admin-teachers
  /refresh:
    get:
      description: Refresh access token using refresh token stored in cookie
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/service.Tokens'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Refresh Access Token
      tags:
      - auth
  /sign-in:
    post:
      consumes:
      - application/json
      description: Sign in a user and generate access token
      parameters:
      - description: Data for signing in user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/service.Tokens'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Sign In User
      tags:
      - auth
  /sign-up:
    post:
      consumes:
      - application/json
      description: User registration
      parameters:
      - description: Data for registration user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Registered
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User registration
      tags:
      - auth
swagger: "2.0"
